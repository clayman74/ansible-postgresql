---

- name: Create schema for postgresql exporter
  postgresql_schema:
    name: "{{ postgresql.exporter.schema }}"
    owner: "{{ postgresql.exporter.user }}"
  become: true
  become_user: postgres

- name: Create view for pg_stat_activity  # noqa 301
  command: "psql -c \"CREATE OR REPLACE VIEW {{ postgresql.exporter.schema }}.pg_stat_activity AS SELECT * FROM pg_catalog.pg_stat_activity;\""
  become: true
  become_user: postgres

- name: Grant access  # noqa 301
  command: "psql -c \"GRANT SELECT ON {{ postgresql.exporter.schema }}.pg_stat_activity TO {{ postgresql.exporter.user }};\""
  become: true
  become_user: postgres

- name: Create view for pg_stat_replication  # noqa 301
  command: "psql -c \"CREATE OR REPLACE VIEW {{ postgresql.exporter.schema }}.pg_stat_replication AS SELECT * FROM pg_catalog.pg_stat_replication;\""
  become: true
  become_user: postgres

- name: Grant access  # noqa 301
  command: "psql -c \"GRANT SELECT ON {{ postgresql.exporter.schema }}.pg_stat_replication TO {{ postgresql.exporter.user }};\""
  become: true
  become_user: postgres

- name: Prepare folder
  file: path={{ postgresql.service.dir }} state=directory

- name: Assemble service config
  template:
    src: "{{ item }}.j2"
    dest: "{{ postgresql.service.dir }}/{{ item }}"
  with_items:
    - .env
    - docker-compose.yml
    - queries.yaml
  notify: restart postgresql service
